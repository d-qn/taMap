% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/communes_ch_indicators.R
\name{loadCommunesCHportraits}
\alias{loadCommunesCHportraits}
\title{Swiss communes socio-demographic indicators}
\value{
a matrix
}
\description{
Load socio-demographic data by the Swiss Statistical Office.
}
\details{
Run \code{processPortraitsRegionauxCommune()} to generate a readable csv file for \code{loadCommunesCHportraits}

The matrix has the commune BFS code as rowname and 3 attributes: \itemize{
\item \code{communeName} the text name of the commune (same length as the matrix length)
\item \code{indicatorYear} & \code{indicatorGroup} respectively the year and the category of the communal indicator (both of same length as the matrix width). See \url{http://www.bfs.admin.ch/bfs/portal/fr/index/regionen/02/key.html}
}
}
\examples{
communeData <- loadCommunesCHportraits()
colnames(communeData)
head(rownames(communeData))
attr(communeData, "indicatorYear")
attr(communeData, "indicatorGroup")

# Select only "surface" indicators
colIdx <- which(attr(communeData, "indicatorGroup") == "Surface")
head(communeData[,colIdx])

zipcode <- loadCHzipcode()
# get the zipcode of each commune
zp <- zipcode[match( attr(communeData, "communeName"), zipcode$Gemeindename),]

\dontrun{
library(tidyverse)

## 1. Show the \%foreigners vs \% vote UDC
  g1 <- ggplot(data = as.data.frame(communeData), aes(x = `Etrangers en \%`, y = UDC)) + 
  geom_point(aes(size = Habitants), alpha = 0.5)
  g1

## 2. Barcode chart: Densité de la population par km²" 
## ------------- TO DO add some text what is highlighted,  better colour use, ..
communesList <- communes_list() \%>\% 
  select(-`Numéro d'historisation`, -`Numéro du district`, -`Date de l'inscription`)

dd <- communeData \%>\% as.data.frame() \%>\% 
  rownames_to_column(var = "Numéro de la commune") \%>\% 
  select(`Numéro de la commune`, `Densité de la population par km²`, 
  `Surface agricole en \%`, `PS`) \%>\% 
  mutate(`Numéro de la commune` = as.integer(`Numéro de la commune`))
dd <- left_join(dd, communesList) \%>\% 
  gather(feature, value, -`Numéro de la commune`, 
  -Canton, -`Nom du district`, -`Nom de la commune`)
## colour group
## 6617 Cologny < GE < remaining
ddd <- dd \%>\% mutate(
  cgroup = as.factor(ifelse(`Numéro de la commune` == 6617, 1,
    ifelse(Canton == "GE", 2, 3))),
  alpha = case_when(cgroup == 1 ~ 1, cgroup == 2 ~ 0.7, cgroup == 3 ~ 0.1),
  size  = case_when(cgroup == 1 ~ 1, cgroup == 2 ~ 0.5, cgroup == 3 ~ 0.3),
  )

barcode <- ggplot(ddd) +
  geom_segment(aes(x = value, xend = value, colour = cgroup, alpha = alpha, size = size), 
  y = -0.5, yend = 0.5) +
  scale_y_continuous(expand = c(0,0), limits=c(-0.5, 0.5), labels = NULL) +
  theme_minimal() +
  facet_wrap(~feature, ncol = 1, scales = "free_x") +
  scale_alpha_identity() +
  scale_size_identity() +
  scale_colour_manual(values = c('#003333', '#008080', '#00e6e6'))

barcode + theme(strip.text = element_text(hjust = 0), panel.grid = element_blank())
}
}
\seealso{
Office fédéral de la statistique > Les Régions > Communes > Données et explications (portraits): \url{https://www.bfs.admin.ch/bfs/fr/home/statistiques/statistique-regions/portraits-regionaux-chiffres-cles/communes.assetdetail.328133.html} \cr
The cleaning up of raw xls file: \itemize{
  \item Remove all the empty lines (header has 3 lines: Indicator type, indicator, year)
  \item Reorder the header for: indicator type, year, indicator
  \item Remove in the data table, the line for Switzerland 
  \item Remove the text at the bottom
  \item Save as csv
}
}
